## 项目类型

PROJECT_TYPE			:= lib

## 生成目标名称（完整文件名称要根据类型PROJECT_TYPE、配置PROJECT_CONFIG、版本PROJECT_VERSION增加前缀、后缀）

PROJECT_TARGET			:= log4cplus

## 项目版本号（只要前三位，最后一位自动生成）

PROJECT_VERSION			:= 

## 该项目默认的配置类型

PROJECT_CONFIG			:= $(PROJECT_CONFIG) static debug multi

## 指定源文件目录（该项目源文件的总目录，相对于源文件根目录ROOT_SOURCE_DIRECTORY，默认为LOCAL_NAME）

PROJECT_SOURCE_DIRECTORY	:= 

## 如果源码目录有子目录，指定子目录的名称（没有指定时，将自动搜索子目录）

PROJECT_SOURCE_SUB_DIRECTORYS	:= 

## 指定搜索源码子目录的深度（默认为1）

PROJECT_SOURCE_DEPTH   		:= 1

## 指定头文件目录（该项目头文件的总目录，相对于头文件根目录ROOT_HEADER_DIRECTORY，默认为LOCAL_NAME）

PROJECT_HEADER_DIRECTORY	:=

## 项目预编译头文件

PROJECT_COMMON_HEADERS  	:=

## 额外包含目录（多个，相对于包含根目录ROOT_INCLUDE_DIRECTORY）

PROJECT_EXTERNAL_INCLUDES	:=

## 该项目特点的编译选项

PROJECT_COMPILE_FLAGS		:= -DINSIDE_LOG4CPLUS $(if $(filter -DANDROID,$(PLATFORM_COMPILE_FLAGS)),-DLOG4CPLUS_SINGLE_THREADED) -D_GNU_SOURCE=1 -D_REENTRANT -Wextra -pedantic -Wstrict-aliasing -Wstrict-overflow -Woverloaded-virtual -Wold-style-cast -Wundef -Wshadow -Wformat -Wno-variadic-macros

## 该项目特点的链接选项

PROJECT_LINK_FLAGS		:=

## 该项目依赖的其他项目

PROJECT_DEPENDS			:=

## 该项目特定的引用库

PROJECT_DEPEND_LIBRARYS		:= 

SOURCE_SUFFIX               := .cxx
